[package]
name = "autoheal-rs"
# don't change this, it's updated before an actual build by update-version.sh
version = "0.0.0-development"
edition = "2024"
rust-version = "1.87.0"
authors = ["Kristof Mattei"]
description = "Monitoring application for docker containers"
license-file = "LICENSE"
categories = ["command-line-utilities"]
keywords = ["docker", "health"]
repository = "https://github.com/kristof-mattei/autoheal-rs"

[lints.clippy]
# don't stop from compiling / running
all = "warn"
cargo = "warn"
complexity = "warn"
correctness = "warn"
pedantic = "warn"
perf = "warn"
# restriction = "warn"
style = "warn"
suspicious = "warn"

# this has 0 performance implications, the binding is compiled away, and it could cause issues
# when done blindly, plus it makes it harder to debug as you cannot put breakpoints on return
# values of functions (yet)
let_and_return = { level = "allow", priority = 127 }
# this one is debatable. continue is used in places to be explicit, and to guard against
# issues when refactoring
needless_continue = { level = "allow", priority = 127 }
# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }

[lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

[dependencies]
color-eyre = "0.6.4"
console-subscriber = "0.4.1"
hashbrown = "0.15.3"
hex = "0.4.3"
http = "1.3.1"
http-body-util = "0.1.3"
hyper = { version = "1.6.0", default-features = false }
hyper-tls = { version = "0.6.0", default-features = false, features = [
    "vendored",
] }
hyper-unix-socket = "0.3.0"
hyper-util = { version = "0.1.13", default-features = false, features = [
    "client-legacy",
    "http1",
    "tokio",
] }
libc = "0.2.172"
percent-encoding = "2.3.1"
serde = { version = "1.0.219", features = ["derive", "rc"] }
serde_json = "1.0.140"
tokio = { version = "1.45.1", features = [
    "rt-multi-thread",
    "macros",
    "time",
    "signal",
    "net",
] }
tracing = "0.1.41"
tracing-error = "0.2.1"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
url = { version = "2.5.4", features = ["expose_internals"] }

# OpenSSL for musl
[target.'cfg(all(any(target_arch="x86_64", target_arch="aarch64"), target_os="linux", target_env="musl"))'.dependencies]
openssl = { version = "0.10.73", features = ["vendored"] }
